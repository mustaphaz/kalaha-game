buildscript {
    ext {
        springBootVersion = "2.1.1.RELEASE"
        gradlePluginVersion = "1.2.0"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.junit.platform:junit-platform-gradle-plugin:${gradlePluginVersion}"

    }
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

ext {
    junitJupiterVersion = "5.1.1"
    assertjVersion = "3.11.1"
    mavenVersion = "2.23.4"
    restAssuredVersion = "3.2.0"
    commonsVersion = "2.5"
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-mustache"
    compile "org.springframework.boot:spring-boot-devtools"
    compile "org.projectlombok:lombok"
    compile "io.rest-assured:rest-assured:${restAssuredVersion}"

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.assertj:assertj-core:${assertjVersion}"
    testCompile "org.mockito:mockito-core:${mavenVersion}"
    testCompile "org.mockito:mockito-junit-jupiter:${mavenVersion}"

    integrationTestCompile "commons-io:commons-io:${commonsVersion}"
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    System.setProperty 'junit.jupiter.extensions.autodetection.enabled', 'false'
    testClassesDirs += sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

